name: Build executable mac
on:
  pull_request:
    branches: [development]
  push:
    branches:
      - release/stable
      - development
jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2.3.2
        with:
          python-version: 3.9
      - name: Install TA-lib
        run: brew install ta-lib
      - name: save pip cache dir
        id: pipdir
        run: echo "::set-output name=pipcachedir::$(pip cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.pipdir.outputs.pipcachedir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v2
        with:
          path: |
            ./build
            ./dist
          key: ${{ runner.os }}-pyinstaller-
          restore-keys: |
            ${{ runner.os }}-pyinstaller
      - name: install requirements
        run: pip install -r requirements.txt
      - name: build executable
        run: python build_scripts/build.py
      - name: build archive
        run: zip -r ./engine.zip .
        working-directory: dist/engine
      - name: Archive built executable
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: engine-macos
          path: ./dist/engine/engine.zip
  test:
    needs:
      - build
    runs-on: macos-latest
    steps:
      - name: exe
        uses: actions/download-artifact@v2
        with:
          name: engine-macos
      - name: unzip
        run: unzip ./engine.zip
      - name: set executable bit
        run: chmod +x ./engine
      - name: init
        run: ./engine init new-dir
      - name: run
        run: ../engine
        working-directory: ./new-dir
  deploy:
    needs:
      - build
      - test
    runs-on: ubuntu-18.04
    environment: "executable_release"
    if: github.ref == 'refs/heads/release/stable' || github.ref == 'refs/heads/development'
    steps:
      - uses: actions/checkout@v2
      - name: exe
        uses: actions/download-artifact@v2
        with:
          name: engine-macos
      - run: ls -la
      - run: |
          aws s3 --endpoint=https://ams3.digitaloceanspaces.com cp ./engine.zip s3://engine-store/engine-macos-${GITHUB_REF##*/}.zip --acl "public-read"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET }}
